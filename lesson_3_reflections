When to use a remote repository: when collaborating with others, backup local

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Commits done by collaborators might conflict with version being worked on in local computer

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork=GitHub clone of a repository on GitHub.  Fork when don't have permission to modify original.
Clone=can be done on GitHub or local
Branch=done on local within a repository

What is the benefit of having a copy of the last known state of the remote stored locally?
Can do a diff to compare new version against local

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Phone:  harder, slow, and tedious
Dropbox: harder, no version tracking, no merge
Internal server: harder, esp. if collaborator(s) from outside

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
If working on a experimental feature or with other, better to work on a separate branch before incorporating into the main branch.  Updating the master directly is easier and faster but circumvents any review process.